{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.orders.$id.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale).account.orders.$id.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale).account.orders.$id.jsx\");\n  import.meta.hot.lastModified = \"1710397580261.904\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from '@shopify/remix-oxygen';\nimport { useLoaderData } from '@remix-run/react';\nimport { Money, Image, flattenConnection } from '@shopify/hydrogen';\nimport { CUSTOMER_ORDER_QUERY } from '~/graphql/customer-account/CustomerOrderQuery';\n\n/**\n * @type {MetaFunction<typeof loader>}\n */\nexport const meta = ({\n  data\n}) => {\n  return [{\n    title: `Order ${data?.order?.name}`\n  }];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  params,\n  context,\n  request\n}) {\n  if (!params.id) {\n    return redirect('/account/orders');\n  }\n  const orderId = atob(params.id);\n  const {\n    data,\n    errors\n  } = await context.customerAccount.query(CUSTOMER_ORDER_QUERY, {\n    variables: {\n      orderId\n    }\n  });\n  if (errors?.length || !data?.order) {\n    throw new Error('Order not found');\n  }\n  const {\n    order\n  } = data;\n  const lineItems = flattenConnection(order.lineItems);\n  const discountApplications = flattenConnection(order.discountApplications);\n  const fulfillmentStatus = flattenConnection(order.fulfillments)[0].status;\n  const firstDiscount = discountApplications[0]?.value;\n  const discountValue = firstDiscount?.__typename === 'MoneyV2' && firstDiscount;\n  const discountPercentage = firstDiscount?.__typename === 'PricingPercentageValue' && firstDiscount?.percentage;\n  return json({\n    order,\n    lineItems,\n    discountValue,\n    discountPercentage,\n    fulfillmentStatus\n  }, {\n    headers: {\n      'Set-Cookie': await context.session.commit()\n    }\n  });\n}\nexport default function OrderRoute() {\n  _s();\n  /** @type {LoaderReturnData} */\n  const {\n    order,\n    lineItems,\n    discountValue,\n    discountPercentage,\n    fulfillmentStatus\n  } = useLoaderData();\n  return <div className=\"account-order\">\n      <h2>Order {order.name}</h2>\n      <p>Placed on {new Date(order.processedAt).toDateString()}</p>\n      <br />\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th scope=\"col\">Product</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {lineItems.map((lineItem, lineItemIndex) =>\n          // eslint-disable-next-line react/no-array-index-key\n          <OrderLineRow key={lineItemIndex} lineItem={lineItem} />)}\n          </tbody>\n          <tfoot>\n            {(discountValue && discountValue.amount || discountPercentage) && <tr>\n                <th scope=\"row\" colSpan={3}>\n                  <p>Discounts</p>\n                </th>\n                <th scope=\"row\">\n                  <p>Discounts</p>\n                </th>\n                <td>\n                  {discountPercentage ? <span>-{discountPercentage}% OFF</span> : discountValue && <Money data={discountValue} />}\n                </td>\n              </tr>}\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                <p>Subtotal</p>\n              </th>\n              <th scope=\"row\">\n                <p>Subtotal</p>\n              </th>\n              <td>\n                <Money data={order.subtotal} />\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                Tax\n              </th>\n              <th scope=\"row\">\n                <p>Tax</p>\n              </th>\n              <td>\n                <Money data={order.totalTax} />\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                Total\n              </th>\n              <th scope=\"row\">\n                <p>Total</p>\n              </th>\n              <td>\n                <Money data={order.totalPrice} />\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n        <div>\n          <h3>Shipping Address</h3>\n          {order?.shippingAddress ? <address>\n              <p>{order.shippingAddress.name}</p>\n              {order.shippingAddress.formatted ? <p>{order.shippingAddress.formatted}</p> : ''}\n              {order.shippingAddress.formattedArea ? <p>{order.shippingAddress.formattedArea}</p> : ''}\n            </address> : <p>No shipping address defined</p>}\n          <h3>Status</h3>\n          <div>\n            <p>{fulfillmentStatus}</p>\n          </div>\n        </div>\n      </div>\n      <br />\n      <p>\n        <a target=\"_blank\" href={order.statusPageUrl} rel=\"noreferrer\">\n          View Order Status \u2192\n        </a>\n      </p>\n    </div>;\n}\n\n/**\n * @param {{lineItem: OrderLineItemFullFragment}}\n */\n_s(OrderRoute, \"9HWCqBQJFE7TQ94oZg/lgQX+idw=\", false, function () {\n  return [useLoaderData];\n});\n_c = OrderRoute;\nfunction OrderLineRow({\n  lineItem\n}) {\n  return <tr key={lineItem.id}>\n      <td>\n        <div>\n          {lineItem?.image && <div>\n              <Image data={lineItem.image} width={96} height={96} />\n            </div>}\n          <div>\n            <p>{lineItem.title}</p>\n            <small>{lineItem.variantTitle}</small>\n          </div>\n        </div>\n      </td>\n      <td>\n        <Money data={lineItem.price} />\n      </td>\n      <td>{lineItem.quantity}</td>\n      <td>\n        <Money data={lineItem.totalDiscount} />\n      </td>\n    </tr>;\n}\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('customer-accountapi.generated').OrderLineItemFullFragment} OrderLineItemFullFragment */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n_c2 = OrderLineRow;\nvar _c, _c2;\n$RefreshReg$(_c, \"OrderRoute\");\n$RefreshReg$(_c2, \"OrderLineRow\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AA4FM;AA3FN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,wDAA0D,EAAE;AAAA,EACrG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+C;AAC/C,cAAY,IAAI,eAAe;AACjC;AAWO,IAAM,OAAO,CAAC;AAAA,EACnB;AACF,MAAM;AACJ,SAAO,CAAC;AAAA,IACN,OAAO,SAAS,MAAM,OAAO;AAAA,EAC/B,CAAC;AACH;AA8Ce,SAAR,aAA8B;AACnC,KAAG;AAEH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,iBAClB;AAAA,uDAAC,QAAG;AAAA;AAAA,MAAO,MAAM;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,IACtB,mDAAC,OAAE;AAAA;AAAA,MAAW,IAAI,KAAK,MAAM,WAAW,EAAE,aAAa;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,IACzD,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IACJ,mDAAC,SACC;AAAA,yDAAC,WACC;AAAA,2DAAC,WACC,6DAAC,QACC;AAAA,6DAAC,QAAG,OAAM,OAAM,uBAAhB;AAAA;AAAA;AAAA;AAAA,iBAAuB;AAAA,UACvB,mDAAC,QAAG,OAAM,OAAM,qBAAhB;AAAA;AAAA;AAAA;AAAA,iBAAqB;AAAA,UACrB,mDAAC,QAAG,OAAM,OAAM,wBAAhB;AAAA;AAAA;AAAA;AAAA,iBAAwB;AAAA,UACxB,mDAAC,QAAG,OAAM,OAAM,qBAAhB;AAAA;AAAA;AAAA;AAAA,iBAAqB;AAAA,aAJvB;AAAA;AAAA;AAAA;AAAA,eAKA,KANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,QACA,mDAAC,WACE,oBAAU,IAAI,CAAC,UAAU;AAAA;AAAA,UAE5B,mDAAC,gBAAiC,YAAf,eAAnB;AAAA;AAAA;AAAA;AAAA,iBAAsD;AAAA,SAAE,KAHxD;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QACA,mDAAC,WACG;AAAA,4BAAiB,cAAc,UAAU,uBAAuB,mDAAC,QAC/D;AAAA,+DAAC,QAAG,OAAM,OAAM,SAAS,GACvB,6DAAC,OAAE,yBAAH;AAAA;AAAA;AAAA;AAAA,mBAAY,KADd;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,QAAG,OAAM,OACR,6DAAC,OAAE,yBAAH;AAAA;AAAA;AAAA;AAAA,mBAAY,KADd;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,QACE,+BAAqB,mDAAC,UAAK;AAAA;AAAA,cAAE;AAAA,cAAmB;AAAA,iBAA3B;AAAA;AAAA;AAAA;AAAA,mBAAgC,IAAU,iBAAiB,mDAAC,SAAM,MAAM,iBAAb;AAAA;AAAA;AAAA;AAAA,mBAA4B,KAD/G;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAT8D;AAAA;AAAA;AAAA;AAAA,iBAUhE;AAAA,UACF,mDAAC,QACC;AAAA,+DAAC,QAAG,OAAM,OAAM,SAAS,GACvB,6DAAC,OAAE,wBAAH;AAAA;AAAA;AAAA;AAAA,mBAAW,KADb;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,QAAG,OAAM,OACR,6DAAC,OAAE,wBAAH;AAAA;AAAA;AAAA;AAAA,mBAAW,KADb;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,QACC,6DAAC,SAAM,MAAM,MAAM,YAAnB;AAAA;AAAA;AAAA;AAAA,mBAA6B,KAD/B;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,UACA,mDAAC,QACC;AAAA,+DAAC,QAAG,OAAM,OAAM,SAAS,GAAG,mBAA5B;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,QAAG,OAAM,OACR,6DAAC,OAAE,mBAAH;AAAA;AAAA;AAAA;AAAA,mBAAM,KADR;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,QACC,6DAAC,SAAM,MAAM,MAAM,YAAnB;AAAA;AAAA;AAAA;AAAA,mBAA6B,KAD/B;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,UACA,mDAAC,QACC;AAAA,+DAAC,QAAG,OAAM,OAAM,SAAS,GAAG,qBAA5B;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,QAAG,OAAM,OACR,6DAAC,OAAE,qBAAH;AAAA;AAAA;AAAA;AAAA,mBAAQ,KADV;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,QACC,6DAAC,SAAM,MAAM,MAAM,cAAnB;AAAA;AAAA;AAAA;AAAA,mBAA+B,KADjC;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,aA5CF;AAAA;AAAA;AAAA;AAAA,eA6CA;AAAA,WA3DF;AAAA;AAAA;AAAA;AAAA,aA4DA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,QAAG,gCAAJ;AAAA;AAAA;AAAA;AAAA,eAAoB;AAAA,QACnB,OAAO,kBAAkB,mDAAC,aACvB;AAAA,6DAAC,OAAG,gBAAM,gBAAgB,QAA1B;AAAA;AAAA;AAAA;AAAA,iBAA+B;AAAA,UAC9B,MAAM,gBAAgB,YAAY,mDAAC,OAAG,gBAAM,gBAAgB,aAA1B;AAAA;AAAA;AAAA;AAAA,iBAAoC,IAAO;AAAA,UAC7E,MAAM,gBAAgB,gBAAgB,mDAAC,OAAG,gBAAM,gBAAgB,iBAA1B;AAAA;AAAA;AAAA;AAAA,iBAAwC,IAAO;AAAA,aAHhE;AAAA;AAAA;AAAA;AAAA,eAIxB,IAAa,mDAAC,OAAE,2CAAH;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,QAC7C,mDAAC,QAAG,sBAAJ;AAAA;AAAA;AAAA;AAAA,eAAU;AAAA,QACV,mDAAC,SACC,6DAAC,OAAG,+BAAJ;AAAA;AAAA;AAAA;AAAA,eAAsB,KADxB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,aAWA;AAAA,SAzEF;AAAA;AAAA;AAAA;AAAA,WA0EA;AAAA,IACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IACJ,mDAAC,OACC,6DAAC,OAAE,QAAO,UAAS,MAAM,MAAM,eAAe,KAAI,cAAa,wCAA/D;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OApFG;AAAA;AAAA;AAAA;AAAA,SAqFL;AACJ;AAKA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,SAAS,aAAa;AAAA,EACpB;AACF,GAAG;AACD,SAAO,mDAAC,QACJ;AAAA,uDAAC,QACC,6DAAC,SACE;AAAA,gBAAU,SAAS,mDAAC,SACjB,6DAAC,SAAM,MAAM,SAAS,OAAO,OAAO,IAAI,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA,aAAoD,KADpC;AAAA;AAAA;AAAA;AAAA,aAElB;AAAA,MACF,mDAAC,SACC;AAAA,2DAAC,OAAG,mBAAS,SAAb;AAAA;AAAA;AAAA;AAAA,eAAmB;AAAA,QACnB,mDAAC,WAAO,mBAAS,gBAAjB;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,WAFhC;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,WAQA,KATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IACA,mDAAC,QACC,6DAAC,SAAM,MAAM,SAAS,SAAtB;AAAA;AAAA;AAAA;AAAA,WAA6B,KAD/B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,QAAI,mBAAS,YAAd;AAAA;AAAA;AAAA;AAAA,WAAuB;AAAA,IACvB,mDAAC,QACC,6DAAC,SAAM,MAAM,SAAS,iBAAtB;AAAA;AAAA;AAAA;AAAA,WAAqC,KADvC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAlBY,SAAS,IAAlB;AAAA;AAAA;AAAA;AAAA,SAmBL;AACJ;AAMA,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,YAAY;AAC7B,aAAa,KAAK,cAAc;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
