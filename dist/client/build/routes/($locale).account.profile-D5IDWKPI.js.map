{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.profile.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale).account.profile.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale).account.profile.jsx\");\n  import.meta.hot.lastModified = \"1710397580937.6746\";\n}\n// REMIX HMR END\n\nimport { CUSTOMER_UPDATE_MUTATION } from '~/graphql/customer-account/CustomerUpdateMutation';\nimport { json } from '@shopify/remix-oxygen';\nimport { Form, useActionData, useNavigation, useOutletContext } from '@remix-run/react';\n\n/**\n * @type {MetaFunction}\n */\nexport const meta = () => {\n  return [{\n    title: 'Profile'\n  }];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({\n  context\n}) {\n  await context.customerAccount.handleAuthStatus();\n  return json({}, {\n    headers: {\n      'Set-Cookie': await context.session.commit()\n    }\n  });\n}\n\n/**\n * @param {ActionFunctionArgs}\n */\nexport async function action({\n  request,\n  context\n}) {\n  const {\n    customerAccount\n  } = context;\n  if (request.method !== 'PUT') {\n    return json({\n      error: 'Method not allowed'\n    }, {\n      status: 405\n    });\n  }\n  const form = await request.formData();\n  try {\n    const customer = {};\n    const validInputKeys = ['firstName', 'lastName'];\n    for (const [key, value] of form.entries()) {\n      if (!validInputKeys.includes(key)) {\n        continue;\n      }\n      if (typeof value === 'string' && value.length) {\n        customer[key] = value;\n      }\n    }\n\n    // update customer and possibly password\n    const {\n      data,\n      errors\n    } = await customerAccount.mutate(CUSTOMER_UPDATE_MUTATION, {\n      variables: {\n        customer\n      }\n    });\n    if (errors?.length) {\n      throw new Error(errors[0].message);\n    }\n    if (!data?.customerUpdate?.customer) {\n      throw new Error('Customer profile update failed.');\n    }\n    return json({\n      error: null,\n      customer: data?.customerUpdate?.customer\n    }, {\n      headers: {\n        'Set-Cookie': await context.session.commit()\n      }\n    });\n  } catch (error) {\n    return json({\n      error: error.message,\n      customer: null\n    }, {\n      status: 400,\n      headers: {\n        'Set-Cookie': await context.session.commit()\n      }\n    });\n  }\n}\nexport default function AccountProfile() {\n  _s();\n  const account = useOutletContext();\n  const {\n    state\n  } = useNavigation();\n  /** @type {ActionReturnData} */\n  const action = useActionData();\n  const customer = action?.customer ?? account?.customer;\n  return <div className=\"account-profile\">\n      <h2>My profile</h2>\n      <br />\n      <Form method=\"PUT\">\n        <legend>Personal information</legend>\n        <fieldset>\n          <label htmlFor=\"firstName\">First name</label>\n          <input id=\"firstName\" name=\"firstName\" type=\"text\" autoComplete=\"given-name\" placeholder=\"First name\" aria-label=\"First name\" defaultValue={customer.firstName ?? ''} minLength={2} />\n          <label htmlFor=\"lastName\">Last name</label>\n          <input id=\"lastName\" name=\"lastName\" type=\"text\" autoComplete=\"family-name\" placeholder=\"Last name\" aria-label=\"Last name\" defaultValue={customer.lastName ?? ''} minLength={2} />\n        </fieldset>\n        {action?.error ? <p>\n            <mark>\n              <small>{action.error}</small>\n            </mark>\n          </p> : <br />}\n        <button type=\"submit\" disabled={state !== 'idle'}>\n          {state !== 'idle' ? 'Updating' : 'Update'}\n        </button>\n      </Form>\n    </div>;\n}\n\n/**\n * @typedef {{\n *   error: string | null;\n *   customer: CustomerFragment | null;\n * }} ActionResponse\n */\n\n/** @typedef {import('customer-accountapi.generated').CustomerFragment} CustomerFragment */\n/** @typedef {import('@shopify/hydrogen/customer-account-api-types').CustomerUpdateInput} CustomerUpdateInput */\n/** @typedef {import('@shopify/remix-oxygen').ActionFunctionArgs} ActionFunctionArgs */\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof action>} ActionReturnData */\n_s(AccountProfile, \"ESq5n4UNxLQdC87RexB90ndxeMw=\", false, function () {\n  return [useOutletContext, useNavigation, useActionData];\n});\n_c = AccountProfile;\nvar _c;\n$RefreshReg$(_c, \"AccountProfile\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AA2HM;AA1HN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qDAAuD,EAAE;AAAA,EAClG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4C;AAC5C,cAAY,IAAI,eAAe;AACjC;AAUO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AAiFe,SAAR,iBAAkC;AACvC,KAAG;AACH,QAAM,UAAU,iBAAiB;AACjC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAElB,QAAM,SAAS,cAAc;AAC7B,QAAM,WAAW,QAAQ,YAAY,SAAS;AAC9C,SAAO,mDAAC,SAAI,WAAU,mBAClB;AAAA,uDAAC,QAAG,0BAAJ;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,IACd,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IACJ,mDAAC,QAAK,QAAO,OACX;AAAA,yDAAC,YAAO,oCAAR;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,MAC5B,mDAAC,cACC;AAAA,2DAAC,WAAM,SAAQ,aAAY,0BAA3B;AAAA;AAAA;AAAA;AAAA,eAAqC;AAAA,QACrC,mDAAC,WAAM,IAAG,aAAY,MAAK,aAAY,MAAK,QAAO,cAAa,cAAa,aAAY,cAAa,cAAW,cAAa,cAAc,SAAS,aAAa,IAAI,WAAW,KAAjL;AAAA;AAAA;AAAA;AAAA,eAAoL;AAAA,QACpL,mDAAC,WAAM,SAAQ,YAAW,yBAA1B;AAAA;AAAA;AAAA;AAAA,eAAmC;AAAA,QACnC,mDAAC,WAAM,IAAG,YAAW,MAAK,YAAW,MAAK,QAAO,cAAa,eAAc,aAAY,aAAY,cAAW,aAAY,cAAc,SAAS,YAAY,IAAI,WAAW,KAA7K;AAAA;AAAA;AAAA;AAAA,eAAgL;AAAA,WAJlL;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACC,QAAQ,QAAQ,mDAAC,OACd,6DAAC,UACC,6DAAC,WAAO,iBAAO,SAAf;AAAA;AAAA;AAAA;AAAA,aAAqB,KADvB;AAAA;AAAA;AAAA;AAAA,aAEA,KAHa;AAAA;AAAA;AAAA;AAAA,aAIf,IAAO,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MACb,mDAAC,YAAO,MAAK,UAAS,UAAU,UAAU,QACvC,oBAAU,SAAS,aAAa,YADnC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,OAnBG;AAAA;AAAA;AAAA;AAAA,SAoBL;AACJ;AAgBA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,kBAAkB,eAAe,aAAa;AACxD,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
